#set( $packagePath = $TemplateStringUtility.replaceAllIn(${classDescriptor.package}, ".", "/") ) 

@TargetFileName ${classDescriptor.simpleName}Validator.java # Name of output file with extension but without path
@TargetDir $model.getMetaInfoValueFor("eclipseProjectDir")/$packagePath/validator
@CreateNew true # creates target dir if not existing and overwrites target file if existing
@NameOfValidModel MOGLiCC_JavaBeanModel

package ${classDescriptor.package}.validator;
'
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
'
import ${classDescriptor.package}.${classDescriptor.simpleName};
import ${classDescriptor.package}.validator.helper.*;
'
#parse("commonSubtemplates/importDomainModelClasses.tpl")
'
/**
 * Validator class of the MOGLiCC JavaBean Group for JavaBean '${classDescriptor.simpleName}.java'
 *
 * @author generated by MOGLiCC
 */
public class ${classDescriptor.simpleName}Validator extends JavaBeanValidator {
'
'	private static ${classDescriptor.simpleName}Validator instance;
'
'	public static void doYourJob(final ${classDescriptor.simpleName} data) {
'		if (instance == null) {
'			instance = new ${classDescriptor.simpleName}Validator();
'		} else {
'			instance.validationErrors.clear();
'		}
'		instance.validate(data);
'	}
'
	#parse("C_Constructor.tpl")

'

	#parse("D_validateMethod.tpl")

'
}